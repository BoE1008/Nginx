
#
# Nginx-webserver for Fx.Neirj: https://www.nginx.com/resources/wiki/start
#

# user  nobody;
worker_processes  1;

# error_log  logs/error.log;
# error_log  logs/error.log  notice;
# error_log  logs/error.log  info;
# pid        logs/nginx.pid;


events {
    # 每个worker进程处理的并发最大连接数量，客户端连接计算： 最大连接数 = worker_processes * worker_connections/4
    # worker_connections < worker_rlimit_nofile && worker_rlimit_nofile <= 65535 （ulimit -n查看具体数值）
    # worker_rlimit_nofile 1024;
    # use [ kqueue | epoll | select | poll ]，其中 epoll 在linux内核2.6+使用，windows使用 select ，*BSD使用 kqueue
    worker_connections 1024;
    use select;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  logs/access.log  main;
    sendfile        on;
    # tcp_nopush     on;
    # keepalive_timeout  0;
    keepalive_timeout  65;

    # 这个将为打开文件指定缓存，默认是没有启用的，max 指定缓存数量，
    # 建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。
    open_file_cache max=102400 inactive=20s;

    # open_file_cache 指令中的inactive 参数时间内文件的最少使用次数，
    # 如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个
    # 文件在inactive 时间内一次没被使用，它将被移除。
    open_file_cache_min_uses 1;

    # 这个是指多长时间检查一次缓存的有效信息
    open_file_cache_valid 30s;

    # 默认情况下，Nginx的gzip压缩是关闭的， gzip压缩功能就是可以让你节省不
    # 少带宽，但是会增加服务器CPU的开销哦，Nginx默认只对text/html进行压缩 ，
    # 如果要对html之外的内容进行压缩传输，我们需要手动来设置。
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml;

    server {
        listen       9000;
        server_name  localhost;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        index      index.html index.htm index.js index.php;

        location / {
            root       T:/dataplatform/quantumui/build;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
        listen       9001;
        server_name  localhost;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        
        index      index.html index.htm index.js index.php;

        location / {
            root       T:/material-ui/docs/export;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
        listen       9002;
        server_name  localhost;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        
        index      index.html index.htm index.js index.php;

        location / {
            root       I:/tm-material-ui/docs/build;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    
    upstream lae_server {
        server 127.0.0.1:9988;
    }

    server {
        listen       10000;
        server_name  localhost;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        
        index      index.html index.htm index.js index.php;
        
        location / {
            root   I:/fx/swarm_program/source/lae/web/LocalWeb/production;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        
        location /lae { 
            proxy_pass http://lae_server/lae;
        }
    }
}
